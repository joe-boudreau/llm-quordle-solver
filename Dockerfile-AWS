# Stage 1: Cache Gradle dependencies
FROM gradle:latest AS cache
RUN mkdir -p /home/gradle/cache_home
ENV GRADLE_USER_HOME=/home/gradle/cache_home
COPY build.gradle.* gradle.properties /home/gradle/app/
COPY gradle /home/gradle/app/gradle
WORKDIR /home/gradle/app
RUN gradle clean build -i --stacktrace

# Stage 2: Build Application
FROM gradle:latest AS build
COPY --from=cache /home/gradle/cache_home /home/gradle/.gradle
WORKDIR /home/gradle/src

# Copy only build files first (these change less frequently)
COPY --chown=gradle:gradle build.gradle.* gradle.properties ./
COPY --chown=gradle:gradle gradle ./gradle

# Download dependencies (this layer will be cached)
RUN gradle dependencies --no-daemon || true

# Now copy source code (this changes more frequently)
COPY --chown=gradle:gradle src ./src

# Build the application
RUN gradle shadowJar --no-daemon

# Stage 3: Create the Runtime Image
FROM selenium/standalone-chromium:142.0.7444.59-chromedriver-142.0.7444.59 AS runtime
USER root
# Install Java 22
RUN apt-get update && \
    apt-get install -y wget gnupg2 && \
    wget -O - https://packages.adoptium.net/artifactory/api/gpg/key/public | apt-key add - && \
    echo "deb https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | tee /etc/apt/sources.list.d/adoptium.list && \
    apt-get update && \
    apt-get install -y temurin-22-jdk && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Set JAVA_HOME and update PATH
ENV JAVA_HOME=/usr/lib/jvm/temurin-22-jdk-amd64
ENV PATH="$JAVA_HOME/bin:$PATH"

# Create function directory for Lambda
WORKDIR /function

# Copy the JAR file to function directory
COPY --from=build /home/gradle/src/build/libs/*.jar ./
# copy the uBlock Extension files
COPY uBOL-ext /uBOL-ext
# Set runtime interface client as default command for the container runtime
ENTRYPOINT ["/usr/bin/java", "-cp", "./*", "com.amazonaws.services.lambda.runtime.api.client.AWSLambda"]
# Pass the name of the function handler as an argument to the runtime
CMD [ "LambdaRuntimeInterface" ]

